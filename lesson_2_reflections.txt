What happens when you initialize a repository? Why do you need to do it?

A hidden .git directory is created locally and a new repository is 
initialized through Git.

How is the staging area different from the working directory and the repository? 
What value do you think it offers?

The staging area lets you collect one or more files from your working directory 
that you want to commit to your repository.
It lets you create a collection of files to commit together as one commit action, 
and it also gives you a chance to review the collection of files before actually 
doing the commit. This way, you have a chance to remove files or add before the commit.

How can you use the staging area to make sure you have one commit per logical change?

You can run diff commands to compare what you have changed compared to the last commit. 
You can see all files that are modified as well as what was changed in each file. 
Not all modified files in the working directory have to be in the staging area.

What are some situations when branches would be helpful in keeping your history 
organized? How would branches help?

Branches are good for trying something experimental. 
A branch could also be useful for working on a larger feature that you don't 
want to commit to the master branch until you have it fully completed.

How do the diagrams help you visualize the branch structure?

It helps to see what is on the main master branch vs. what is on other branches. 
It helps to understand what can, and cannot, be seen from the other branches.

What is the result of merging two branches together? Why do we represent it in 
the diagram the way we do?

When 2 branches are merged, changes from both branches now exist in one codebase.
A new commit is created in the branch that was checked out at the time of the commit. 
The new commit has 2 parents, instead of the usual one; it points to the last commit 
on each of the 2 branches that were just merged.
The diagram helps to show that changes occurred independently along 2 lines, the 
branches, and then were combined together so that all changes exist in 1 set of files.

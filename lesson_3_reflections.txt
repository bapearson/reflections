When would you want to use a remote repository rather than keeping all your work local?

This would be useful when either I might need to work on this set of files from more 
than one computer, or if I was working with other developers so that we could share files.

Why might you want to always pull changes manually rather than having Git automatically 
stay up-to-date with your remote repository?

This lets you control how often you get remote changes. If you are in the middle of 
working on a feature, it could be distracting to suddenly see different behavior in 
your code (due to an auto pull) and wonder whether you caused the change. If you 
manually pull down code changes, then you are more aware of when to expect changes 
like this.

Describe the differences between forks, clones, and branches. When would you use 
one instead of another?

A fork exists in GitHub and remembers what repository it originated from, but 
changes to files in the fork do not affect the original repository. A fork is 
useful if you want to make changes to files if you don't have permission to 
change the original files, or if the changes are not wanted or needed by the 
owner of the original repository.
A clone is a copy of a repository; the clone exists in a local directory on a 
person's computer. Changes to a clone can be pushed back up to the origin 
repository in GitHub. A clone lets you make changes to files on your own 
computer and use any file editor that you prefer. Also if you are one of 
several people working on files in a repository, you can each make changes 
and submit those changes back to the original repository in GitHub so that 
others have access to those changes.
A branch is a separate set of code in a repository, containing differences between 
it and files in the master branch of the repository. A branch allows you a way 
to change files and test out your changes without affecting anyone else trying 
to use code from the master branch. But once you have completed changes to your 
satisfaction, then you can merge your changes back into the master branch.

What is the benefit of having a copy of the last known state of the remote stored locally?

This helps you to know whether there might any conflicting changes when you 
try to commit your local changes. And if there are conflicts, you can review 
them to determine how you might want to resolve them.
